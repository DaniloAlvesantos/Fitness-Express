import React from "react";
import Head from "next/head";
import Header from "../components/Header";

// Styled-Components n√£o estiliza o OBJ [id].js !

function Receita({ exercicio }) {
    console.log(exercicio);
    return (
        <>
            <Head>
                <title>Receitas |fitnessExpress</title>
                <meta
                    name="description"
                    content="Generated by create next app"
                />
            </Head>
            <Header />
            {/* <MainExer>
                <ContainerTop>
                    <BannerExer>
                        <img src={exercicio.img} alt="exercicios" />
                    </BannerExer>
                    <LegendaExe>
                            <p>{exercicio.nome}</p>
                        </LegendaExe>
                    <InfoBox>
                        <Nivel>
                            <p>{exercicio.nivel}</p>
                        </Nivel>
                        <ContainerInfo>
                            <p>{exercicio.info}</p>
                        </ContainerInfo>
                    </InfoBox>
                </ContainerTop>
            </MainExer>
            <ContentBox>
                <ContainerContent>
                    <h2>Modo</h2>
                    <p>{exercicio.modo}</p>
                </ContainerContent>
            </ContentBox> */}
        </>
    );
}

export async function getStaticProps({ params }) {
    const exercicio = await fetch(`https://api-fake-fitness-express.herokuapp.com/exe/${params.id}`)
        .then((data) => {
            if (data.ok) {
                return data.json();
            }
            throw new Error("Deu problema");
        })
        .then((dataObj) => dataObj);

    return {
        props: {
            exercicio,
        },
    };
}

export async function getStaticPaths() {
    const exercicios = await fetch(`https://api-fake-fitness-express.herokuapp.com/exe`)
        .then((re) => {
            if (re.ok) {
                return re.json();
            }
            throw new Error(" Problema ao buscar a API ! ");
        })
        .then((reObj) => reObj);
    return {
        paths: exercicios.map((exercicio) => ({
            params: {
                id: exercicio.id.toString(),
            },
        })),
        fallback: false,
    };
}

export default Receita;
